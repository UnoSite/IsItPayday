name: Lock Inactive Issues and Pull Requests

on:
  schedule:
    - cron: "0 0 * * *"  # Kører dagligt ved midnat UTC
  workflow_dispatch:  # Giver mulighed for manuel kørsel

jobs:
  close_stale:
    name: Close Stale Issues & PRs (30+ days inactive)
    runs-on: ubuntu-latest
    steps:
      - name: Close inactive issues and pull requests
        uses: actions/stale@v9
        with:
          repo-token: ${{ secrets.PAT_TOKEN }}
          days-before-stale: 30
          days-before-close: 0
          stale-issue-message: "Denne issue er blevet inaktiv i 30 dage og bliver nu lukket."
          stale-pr-message: "Denne pull request er blevet inaktiv i 30 dage og bliver nu lukket."
          close-issue-message: "Lukket pga. inaktivitet."
          close-pr-message: "Lukket pga. inaktivitet."
          stale-issue-label: "Stale"
          stale-pr-label: "Stale"
          close-issue-reason: "not_planned"

  lock_closed:
    name: Lock Closed Issues & PRs (7+ days)
    runs-on: ubuntu-latest
    needs: close_stale  # Vent på at stale-issues bliver lukket
    steps:
      - name: Lock closed issues and pull requests
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          script: |
            const daysSinceClosed = 7;
            const labelName = "LOCKED";
            const now = new Date();

            async function processItems(type) {
              const response = await github.paginate(
                github.rest.issues.listForRepo,
                {
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  state: "closed",
                  per_page: 100,
                }
              );

              for (const item of response) {
                if (item.locked) continue;
                
                const closedAt = new Date(item.closed_at);
                const daysClosed = (now - closedAt) / (1000 * 60 * 60 * 24);
                
                if (daysClosed > daysSinceClosed) {
                  console.log(`Locking ${type}: #${item.number}`);

                  await github.rest.issues.lock({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: item.number,
                  });

                  await github.rest.issues.addLabels({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: item.number,
                    labels: [labelName],
                  });
                }
              }
            }

            await processItems("issue");
            await processItems("pull request");

  lock_stale:
    name: Lock Stale Issues & PRs
    runs-on: ubuntu-latest
    needs: close_stale
    steps:
      - name: Lock issues and PRs closed due to inactivity
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          script: |
            const labelName = "LOCKED";

            async function processItems(type) {
              const response = await github.paginate(
                github.rest.issues.listForRepo,
                {
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  state: "closed",
                  labels: ["Stale"],
                  per_page: 100,
                }
              );

              for (const item of response) {
                if (item.locked) continue;
                
                console.log(`Locking stale ${type}: #${item.number}`);

                await github.rest.issues.lock({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: item.number,
                });

                await github.rest.issues.addLabels({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: item.number,
                  labels: [labelName],
                });
              }
            }

            await processItems("issue");
            await processItems("pull request");
